/**
 * Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.
 * The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.
 * Please note that your returned answers (both index1 and index2) are not zero-based.
 * 解法核心思想在于左右夹逼的利用
 * 
 */
public class Solution {
    public int[] twoSum(int[] numbers, int target) {
        if(numbers==null || numbers.length<2){
            return null;
        }
        
        int[] result=new int[2];
        int len=numbers.length;
        int left=0,right=len-1;
        
        while(left<right){
            if(target==numbers[left]+numbers[right]){
                result[0]=left+1;
                result[1]=right+1;
                return result;
            }else if(target > numbers[left]+numbers[right]){
                left++;
            }else{
                right--;
            }
        }
        return null;
    }
}
