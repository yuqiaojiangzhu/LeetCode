/**
 * Given an array and a value, remove all instances of that value in place and return the new length.
 * Do not allocate extra space for another array, you must do this in place with constant memory.
 * The order of elements can be changed. It doesn't matter what you leave beyond the new length.
 * Example:
 * Given input array nums = [3,2,2,3], val = 3
 * Your function should return length = 2, with the first two elements of nums being 2.
 * 解法关键：还是所谓的逆向思维，本算例要求的是移除相同元素，我们可以考虑城保留不同元素，这样逻辑上豁然开朗
 * 
 */
public class Solution {
    public int removeElement(int[] nums, int val) {
        if(nums==null || nums.length==0){
            return 0;
        }
        
        int n=nums.length;
        int beg=0;
        for(int i=0;i<n;i++){
            if(nums[i]!=val){
                nums[beg++]=nums[i];
            }
        }
        return beg;
    }
}
