/**
 * 88. Merge Sorted Array
 * Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.
 * You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2.
 * The number of elements initialized in nums1 and nums2 are m and n respectively.
 * 解法：归并排序
 */
public class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int[] nums=new int[m+n];
        int i=0,j=0,z=0;
        while(i<m && j<n){
            if(nums1[i]<nums2[j]){
                nums[z]=nums1[i];
                i++;
            }else{
                nums[z]=nums2[j];
                j++; 
            }
            z++;
        }
        
        if(i==m){
            System.arraycopy(nums2,j,nums,z,m+n-z);
        }else{
            System.arraycopy(nums1,i,nums,z,m+n-z);
        }
        
        System.arraycopy(nums,0,nums1,0,m+n);
    }
    
    
}

/*其他人的解法，比我的优，其实就是反向考虑问题
class Solution {
public:
    void merge(int A[], int m, int B[], int n) {
        int i=m-1;
		int j=n-1;
		int k = m+n-1;
		while(i >=0 && j>=0)
		{
			if(A[i] > B[j])
				A[k--] = A[i--];
			else
				A[k--] = B[j--];
		}
		while(j>=0)
			A[k--] = B[j--];
    }
};

*/
